knitr::opts_chunk$set(echo = FALSE)
# Load dependencies
library(reticulate) # For rendering Python code
knitr::include_graphics("figures/Table_variables_overview")
knitr::include_graphics("figures/Table_variables_overview.png")
knitr::include_graphics("figures/methodology_steps.png")
knitr::opts_chunk$set(echo = TRUE)
dag  <- dagify(GRE_score ~ enroll,
undergrad_GPA ~ enroll,
GRE_score ~ grade,
undergrad_GPA ~ grade,
undergrad_GPA ~ GRE_score)
library(tibble)
library(ggdag)
library(ggplot2)
dag  <- dagify(GRE_score ~ enroll,
undergrad_GPA ~ enroll,
GRE_score ~ grade,
undergrad_GPA ~ grade,
undergrad_GPA ~ GRE_score)
ggdag(dag) +  theme_dag_blank()
library(tibble)
library(ggdag)
library(ggplot2)
dag  <- dagify(enroll ~ final_grade,
GRE_score ~ enroll,
undergrad_GPA ~ enroll,
GRE_score ~ final_grade,
undergrad_GPA ~ final_grade,
undergrad_GPA ~ GRE_score)
ggdag(dag) +  theme_dag_blank()
language_camp_dag <- dagify(grade ~ camp + gpa + gre,
camp ~ gpa + gre,
gre ~ gpa,
outcome = "grade",
exposure = "camp",
coords = list(x = c(camp = 1, gpa = 2, gre = 3, grade = 4),
y = c(camp = 1, gpa = 2, gre = 2, grade = 1)))
ggdag_status(language_camp_dag) +
theme_dag() +
guides(color = "none")  # Turn off legend
library(tibble)
library(ggdag)
library(ggplot2)
dag  <- dagify(camp ~ final_grade,
GRE_score ~ camp,
undergrad_GPA ~ camp,
GRE_score ~ final_grade,
undergrad_GPA ~ final_grade,
undergrad_GPA ~ GRE_score)
ggdag(dag) +  theme_dag_blank()
library(tibble)
library(ggdag)
library(ggplot2)
dag  <- dagify(final_grade ~ camp,
camp ~ GRE + GPA,
GRE ~ GPA)
ggdag(dag) +  theme_dag_blank()
library(tibble)
library(ggdag)
library(ggplot2)
dag  <- dagify(grade ~ camp,
camp ~ GRE + GPA,
GRE ~ GPA)
ggdag(dag) +  theme_dag_blank()
library(tibble)
library(ggdag)
library(ggplot2)
dag  <- dagify(grade ~ camp + GRE + GPA,
camp ~ GRE + GPA,
GRE ~ GPA)
ggdag(dag) +  theme_dag_blank()
dag  <- dagify(grade ~ camp + GRE + GPA,
camp ~ GRE + GPA,
GRE ~ GPA,
outcome = "grade",
exposure = "camp",)
dag  <- dagify(grade ~ camp + GRE + GPA,
camp ~ GRE + GPA,
GRE ~ GPA,
outcome = "grade",
exposure = "camp")
ggdag(dag) +  theme_dag_blank()
ggdag_status(language_camp_dag) +
theme_dag() +
guides(color = "none")  # Turn off legend
library(tibble)
library(ggdag)
library(ggplot2)
dag  <- dagify(grade ~ camp + GRE + GPA,
camp ~ GRE + GPA,
GRE ~ GPA,
outcome = "grade",
exposure = "camp")
ggdag_status(language_camp_dag) +
theme_dag() +
guides(color = "none")  # Turn off legend
?rnorm
# 1. GPA is associated with GRE scores
# 2. Camp (binary) is associated with undergraduate GPA and GRE scores. Calculate a camp score and then a camp binary variable from it.
# 3. Final grade is caused by language camp, undergraduate GPA, and GRE scores
gpa <- rnorm(100, mean = 2.5, sd = 1.5) # rnorm: random generation for the normal distribution
e_gre <- rnorm(100, mean = 5, sd = 5) # error term
gre <- 140 + gpa*10 + e_gre # adding together a number, then the impact of gpa and the error term created above
gre_r <- rescale(gre, to = c(100, 170)) # rescaled GRE being between 100 und 170 points
?rescale
library(scales)
gpa <- rnorm(100, mean = 2.5, sd = 1.5) # rnorm: random generation for the normal distribution
e_gre <- rnorm(100, mean = 5, sd = 5) # error term
gre <- 140 + gpa*10 + e_gre # adding together a number, then the impact of gpa and the error term created above
gre_r <- rescale(gre, to = c(100, 170)) # rescaled GRE being between 100 und 170 points
e_camp_score <- rnorm(100, mean= 50, sd= 20) # error term for the camp_score
camp_score <- 5*gpa + gre_r/5 + e_camp_score
camp_score_r <- rescale(camp_score, to = c(0, 100)) # rescale it between 0 and 100
final_grade <- rnorm(100, mean = 50, sd = 25)
final_grade <- rnorm(100, mean = 2.5, sd = 1.5)
final_grade <- rescale(final_grade, to = c(0, 100))
# create data frame consisting of the variables
df <- data.frame(gpa, gre_r, camp_score, final_grade)
View(df)
gpa <- rnorm(100, mean = 2.5, sd = 1.5) # rnorm: random generation for the normal distribution
e_gre <- rnorm(100, mean = 5, sd = 5) # error term
gre <- 140 + gpa*10 + e_gre # adding together a number, then the impact of gpa and the error term created above
gre_r <- rescale(gre, to = c(100, 170)) # rescaled GRE being between 100 und 170 points
e_camp_score <- rnorm(100, mean= 50, sd= 20) # error term for the camp_score
camp_score <- 5*gpa + gre_r/5 + e_camp_score
camp_score_r <- rescale(camp_score, to = c(0, 100)) # rescale it between 0 and 100
final_grade <- rnorm(100, mean = 2.5, sd = 1.5)
final_grade <- rescale(final_grade, to = c(0, 100))
# create data frame consisting of the variables
df <- data.frame(gpa, gre_r, camp_score, final_grade)
View(df)
# create data frame consisting of the variables
df <- data.frame(gpa, gre_r, camp_score_r, final_grade)
# create binary variable for camp:
df <- df %>% mutate(Bins = cut(camp_score_r, breaks = c(0,50,100)))
?mutate
library(dplyr)
# create binary variable for camp:
df <- df %>% mutate(Bins = cut(camp_score_r, breaks = c(0,50,100)))
head(df,10)
# create binary variable for camp:
df <- df %>% mutate(Bins = cut(camp_score_r, breaks = c(-1,50,101)))
head(df,10)
df['Bins'] = df['Bins'].replace(to_replace='(-1,50]', value=0)
df['Bins'] = df['Bins'].replace(to_replace='(-1,50]', value="0")
?replace
head(df,10)
df['Bins'] = df['Bins'].replace(to_replace="(-1,50]", value=0)
head(df, 10)
?cut
# create binary variable for camp:
df <- df %>% mutate(Bins = cut(camp_score_r, breaks = c(-1,50,101), labels = FALSE))
head(df, 10)
df['Bins'] = df['Bins'].replace(to_replace=1, value=0)
# create binary variable for camp:
df <- df %>% mutate(Bins = cut(camp_score_r, breaks = c(-1,50,101), labels = FALSE))
head(df, 10)
df['Bins'] = df['Bins'].replace(to_replace=2, value=0)
df['Bins'] = df['Bins'].replace(to_replace="2", value="0")
head(df, 10)
df['Bins'] = df['Bins'].replace(to_replace=2, value=0)
?replace_all
?replace_all
head(df, 10)
df$Bins == 2 <- 0
library(scales)
library(dplyr)
# 1. GPA is associated with GRE scores
# 2. Camp (binary) is associated with undergraduate GPA and GRE scores. Calculate a camp score and then a camp binary variable from it.
# 3. Final grade is caused by language camp, undergraduate GPA, and GRE scores
gpa <- rnorm(100, mean = 2.5, sd = 1.5) # rnorm: random generation for the normal distribution
e_gre <- rnorm(100, mean = 5, sd = 5) # error term
gre <- 140 + gpa*10 + e_gre # adding together a number, then the impact of gpa and the error term created above
gre_r <- rescale(gre, to = c(100, 170)) # rescaled GRE being between 100 und 170 points
e_camp_score <- rnorm(100, mean= 50, sd= 20) # error term for the camp_score
camp_score <- 5*gpa + gre_r/5 + e_camp_score
camp_score_r <- rescale(camp_score, to = c(0, 100)) # rescale it between 0 and 100
final_grade <- rnorm(100, mean = 2.5, sd = 1.5)
final_grade <- rescale(final_grade, to = c(0, 100))
# create data frame consisting of the variables
df <- data.frame(gpa, gre_r, camp_score_r, final_grade)
# create binary variable for camp:
df <- df %>% mutate(Bins = cut(camp_score_r, breaks = c(-1,50,101), labels = FALSE))
head(df, 10)
df['Bins'] = df['Bins'].replace(to_replace=2, value=0)
df$Bins[Bins==2] <- 0
df <- mutate(Bins = ifelse(2, 0))
?ifelse
df <- mutate(Bins = ifelse(2, 0, 1))
df <- mutate(Bins = ifelse(Bins == 2, 0, 1))
df <- df %>% mutate(Bins = ifelse(df$Bins == 2, 0, 1))
head(df, 10)
df <- df %>% mutate(camp = Bins)
head(df, 10)
# change column name
df$Bins <- df$camp
head(df, 10)
library(scales)
library(dplyr)
# 1. GPA is associated with GRE scores
# 2. Camp (binary) is associated with undergraduate GPA and GRE scores. Calculate a camp score and then a camp binary variable from it.
# 3. Final grade is caused by language camp, undergraduate GPA, and GRE scores
gpa <- rnorm(100, mean = 2.5, sd = 1.5) # rnorm: random generation for the normal distribution
e_gre <- rnorm(100, mean = 5, sd = 5) # error term
gre <- 140 + gpa*10 + e_gre # adding together a number, then the impact of gpa and the error term created above
gre_r <- rescale(gre, to = c(100, 170)) # rescaled GRE being between 100 und 170 points
e_camp_score <- rnorm(100, mean= 50, sd= 20) # error term for the camp_score
camp_score <- 5*gpa + gre_r/5 + e_camp_score
camp_score_r <- rescale(camp_score, to = c(0, 100)) # rescale it between 0 and 100
final_grade <- rnorm(100, mean = 2.5, sd = 1.5)
final_grade <- rescale(final_grade, to = c(0, 100))
# create data frame consisting of the variables
df <- data.frame(gpa, gre_r, camp_score_r, final_grade)
# create binary variable for camp:
df <- df %>% mutate(Bins = cut(camp_score_r, breaks = c(-1,50,101), labels = FALSE))
# insert 1 for going to the camp (lower score) and 0 for not going (higher score)
df <- df %>% mutate(Bins = ifelse(df$Bins == 2, 0, 1)) # if it is 2, insert 0, if not, insert 1
# change column name
df <- rename(Bins = camp)
# change column name
df <- rename(camp = Bins)
head(df, 10)
# change column name
df <- rename(Bins = camp)
# change column name
rename(df, Bins = camp)
head(df, 10)
# change column name
rename(df, camp = Bins)
